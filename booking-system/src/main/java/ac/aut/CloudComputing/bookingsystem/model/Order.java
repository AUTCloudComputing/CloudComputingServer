//This is used for dynomoDB order model
package ac.aut.CloudComputing.bookingsystem.model;

import java.util.Date;

import org.springframework.data.annotation.Id; 
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
// import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBRangeKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;

import lombok.Data;


@Data 
@DynamoDBTable(tableName = "Order")
public class Order  {

    // // The following would create a parition and sort key from id and create_date for better partitioning and sorting
    // @Data
    // public static class OrderKey {
    //     @DynamoDBHashKey(attributeName = "id")
    //     @DynamoDBAutoGeneratedKey
    //     private String id;

    //     @DynamoDBRangeKey(attributeName = "create_day")
    //     private Date createDay;
    // }
    
    @Id
    @DynamoDBHashKey(attributeName = "id")
    @DynamoDBAutoGeneratedKey  
    private String id;
    
    @DynamoDBAttribute
    private String userId; // Reference to the user who placed the order
     
    @DynamoDBAttribute
    private User user; // Reference to the user who placed the order
    
    @DynamoDBAttribute
    private Court court; // Reference to the court

    @DynamoDBAttribute(attributeName = "order_day")
    private Date orderDay;
    
    @DynamoDBAttribute(attributeName = "cancel_day")
    private Date cancelDay;
    
    @DynamoDBAttribute(attributeName = "create_day") 
    private Date createDay;
    
    @DynamoDBAttribute  
    private String businessId;
    
    @DynamoDBAttribute  
    private String description;
     
    /**
     * 0:cancel;1:done;2:confirmed
     * */
    @DynamoDBAttribute  
    private int status;
 
}
